<?xml version="1.0" encoding="UTF-8" standalone="no"?><mule xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:munit="http://www.mulesoft.org/schema/mule/munit" xmlns:munit-tools="http://www.mulesoft.org/schema/mule/munit-tools" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="   http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd   http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd   http://www.mulesoft.org/schema/mule/munit-tools  http://www.mulesoft.org/schema/mule/munit-tools/current/mule-munit-tools.xsd">
	<munit:config name="post-micorp-papi-new-customer-test-suite.xml"/>
	<munit:test description="Test" doc:id="752a1e1a-9387-4d1d-9c43-3b36807fc757" name="new-test-suite-post-micorp-papiTest">
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock GET:/ customer" doc:id="641e5137-868b-4776-aee7-a3433538040b" processor="http:request">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="4a648b44-48f4-4402-8880-773380c0b9e1" attributeName="doc:id" />
					<munit-tools:with-attribute whereValue="4a648b44-48f4-4402-8880-773380c0b9e1" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[[]]" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit-tools:mock-when doc:name="Mock POST:/ customer" doc:id="d10e7c88-dc61-4ea4-ae80-7c355fdd33a6" processor="http:request">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="7ff6f4e1-bc91-4f4b-80c5-2bdd50c900c8" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[readUrl('classpath://post_order/post_order_POST_customer.dwl')]" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit-tools:mock-when doc:name="Mock POST:/ order" doc:id="b1837183-faba-4074-b6cc-020264d142df" processor="http:request">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="4dc765fd-2fe0-4c94-903e-50554610628b" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[readUrl('classpath://post_order/post_order_POST_order.dwl')]" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit-tools:mock-when doc:name="Mock POST:/ items" doc:id="a1bf2782-f24b-4c06-bbcc-6c1346b0a812" processor="http:request">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="630b8e57-7033-4438-98fd-a7d2eb6872ad" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[readUrl('classpath://post_order/post_order_POST_order.dwl')]" />
				</munit-tools:then-return>

			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution>
			<munit:set-event doc:name="Set Event" doc:id="b2afa46b-1390-4808-bf35-4bde2d0ea4b4" />
			<flow-ref doc:id="132b3ecd-9730-49b7-87fa-24da5265deec" doc:name="Flow-ref to post-micorp-papi" name="post:\order:application\json:micorp-process-api-aman-config"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert expression" doc:id="5a761123-5af6-4097-aab5-e50471bee5e8" >
				<munit-tools:that ><![CDATA[#[import post_order::post_order_response
 ---
post_order_response::main({payload:payload,attributes:attributes,vars:vars})]]]></munit-tools:that>
			</munit-tools:assert>
		</munit:validation>
	</munit:test>


</mule>