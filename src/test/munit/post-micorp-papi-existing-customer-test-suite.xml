<?xml version="1.0" encoding="UTF-8" standalone="no"?><mule xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:munit="http://www.mulesoft.org/schema/mule/munit" xmlns:munit-tools="http://www.mulesoft.org/schema/mule/munit-tools" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="   http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd   http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd   http://www.mulesoft.org/schema/mule/munit-tools  http://www.mulesoft.org/schema/mule/munit-tools/current/mule-munit-tools.xsd">
	<munit:config name="post-micorp-papi-existing-customer-test-suite.xml"/>
	<munit:test description="Test" doc:id="6a8850a6-a006-42d3-8ca6-3fc915e2a19c" name="post-micorp-papi-test-suite-post-micorp-papiTest">
		<munit:behavior>
			<munit-tools:mock-when doc:id="76a5b760-9fe0-4dcb-beea-ea9a77da6dfc" doc:name="mock GET:/ customer" processor="http:request">
				<munit-tools:with-attributes>
					<munit-tools:with-attribute attributeName="doc:id" whereValue="4a648b44-48f4-4402-8880-773380c0b9e1"/>
				</munit-tools:with-attributes>
				<munit-tools:then-return>
					<munit-tools:payload value="#[readUrl('classpath://post_order/post_order_GET_customer.dwl')]"/>
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit-tools:mock-when doc:id="827043cc-7c57-419a-b86e-6d20bf322040" doc:name="mock POST:/ Order" processor="http:request">
				<munit-tools:with-attributes>
					<munit-tools:with-attribute attributeName="doc:id" whereValue="4dc765fd-2fe0-4c94-903e-50554610628b"/>
				</munit-tools:with-attributes>
				<munit-tools:then-return>
					<munit-tools:payload value="#[readUrl('classpath://post_order/post_order_POST_order.dwl')]"/>
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit-tools:mock-when doc:id="df4d5832-5631-4c92-8b04-fcf13e0f4036" doc:name="mock POST:/ items" processor="http:request">
				<munit-tools:with-attributes>
					<munit-tools:with-attribute attributeName="doc:id" whereValue="630b8e57-7033-4438-98fd-a7d2eb6872ad"/>
				</munit-tools:with-attributes>
				<munit-tools:then-return>
					<munit-tools:payload value="#[readUrl('classpath://post_order/post_order_POST_items.dwl')]"/>
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution>
			<munit:set-event doc:id="a4d34ee0-d610-4bf9-ade8-3c5aa26a5342" doc:name="Set Event">
				<munit:payload value="#[readUrl('classpath://post_order/post_order_request.dwl')]"/>
			</munit:set-event>
			<flow-ref doc:id="8702dcca-b0a0-48ab-84d0-92b2e6b51d27" doc:name="Flow-ref to post-micorp-papi" name="post:\order:application\json:micorp-process-api-aman-config"/>
		</munit:execution>
		<munit:validation>
			<munit-tools:assert doc:id="fa221727-9a0f-4c9b-920e-e9208395bc7f" doc:name="Assert expression">
				<munit-tools:that><![CDATA[#[import post_order::post_order_response
 ---
post_order_response::main({payload:payload,attributes:attributes,vars:vars})]]]></munit-tools:that>
			</munit-tools:assert>
		</munit:validation>
	</munit:test>


</mule>